<!DOCTYPE html>
<html lang="{% if lang %}{{ lang }}{% else %}{{ ('no lang specified for ' + page.inputPath) | log }}{% endif %}">
{% include 'components/head.njk' %}
<body>
  {% include 'components/header.njk' %}
  {% include 'components/navigation.njk' %}

  <main>{{ content | safe }}</main>

  {#
    Lazy loading webcomponents, following lamplightdev.com post
    https://lamplightdev.com/blog/2020/03/20/lazy-loading-web-components-with-intersection-observer/
  #}
  {% if (webcomponents.length > 0) %}
    <script>
    // keep a record of the components we've loaded in this way
    const imported = {};
    // Set up our observer:
    let observer = new IntersectionObserver((entries, observerRef) => {
      // The callback is run when the visibility of one or more of the elements
      // being observed has changed. It's also called on page load.
      entries.forEach(async (entry) => {
        //`isIntersecting` will be `true` if any part of the element is currently visible
        if (entry.isIntersecting) {
          // We are assuming here that your Web Component is located in a file
          // named after it's tag name
          const name = entry.target.nodeName.toLowerCase();

          // Once we've observed this element come into view, we can safely remove
          // the observer since we won't need to import the WC code again
          observerRef.unobserve(entry.target);

          if (!imported[name]) {
            // Keep a note of which WCs have been loaded so if we have multiple
            // instances we don't import twice
            imported[name] = true;

            const paths = {% include "_bundles/_js.json" %}

            console.log(paths);

            // Let's load the WC code
            import(paths[name+'.js']);
          }
        }
      });
    });

    // Observe all components with the desired class
    const els = document.querySelectorAll('.dynamic-element');
    els.forEach((el) => {
      observer.observe(el);
    });
    </script>
  {% endif %}

  {# load storyblok js, if in preview mode #}
  {% if preview %}
    <script src="//app.storyblok.com/f/storyblok-v2-latest.js" type="text/javascript"></script>
    <script>
    // Initialize the Storyblok JS Bridge
    const { StoryblokBridge } = window
    const storyblokInstance = new StoryblokBridge()
    
    storyblokInstance.on(['published', 'change'], () => {
      // reload page if save or publish is clicked
      location.reload(true)
    })
    </script>
  {% endif %}
</body>
</html>
